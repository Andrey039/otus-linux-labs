# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  :otuslinux => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
    :disks => {
        :sata1 => {
            :dfile => home + '/VirtualBox VMs/sata1.vdi',
            :size => 1024,
            :port => 1
        },
        :sata2 => {
            :dfile => home + '/VirtualBox VMs/sata2.vdi',
            :size => 1024, # Megabytes
            :port => 2
        },
        :sata3 => {
            :dfile => home + '/VirtualBox VMs/sata3.vdi',
            :size => 1024, # Megabytes
            :port => 3
        },
        :sata4 => {
            :dfile => home + '/VirtualBox VMs/sata4.vdi',
            :size => 1024,
            :port => 4
        }

        
    }
  },
}

Vagrant.configure("2") do |config|

    MACHINES.each do |boxname, boxconfig|
  
        config.vm.define boxname do |box|
  
            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s
  
            #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset
  
            box.vm.network "private_network", ip: boxconfig[:ip_addr]
  
            box.vm.provider :virtualbox do |vb|
                    vb.customize ["modifyvm", :id, "--memory", "256"]
                    needsController = false
            boxconfig[:disks].each do |dname, dconf|
                unless File.exist?(dconf[:dfile])
                  vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                  needsController =  true
                            end
  
            end
                    if needsController == true
                       vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                       boxconfig[:disks].each do |dname, dconf|
                           vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                       end
                    end
            end
  
        box.vm.provision "shell", inline: <<-SHELL
              mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
              yum install -y mdadm smartmontools hdparm gdisk
              yum install -y redhat-lsb-core wget rpmdevtools rpm-build createrepo yum-utils
              wget -O /root/nginx-1.14.1-1.el7_4.ngx.src.rpm https://nginx.org/packages/centos/7/SRPMS/nginx-1.14.1-1.el7_4.ngx.src.rpm
              rpm -i /root/nginx-1.14.1-1.el7_4.ngx.src.rpm
              wget -O /root/latest.tar.gz https://www.openssl.org/source/latest.tar.gz
              tar -xvf /root/latest.tar.gz -C /root/
              yum-builddep -y /root/rpmbuild/SPECS/nginx.spec
while read -r line ; do
[[ $line == '\.\/configure %{BASE_CONFIGURE_ARGS} \\' ]] && line='./configure %{BASE_CONFIGURE_ARGS} --with-openssl=/root/openssl-1.1.1c \\'
    echo "$line" >> /root/nginx1.spec
done < /root/rpmbuild/SPECS/nginx.spec
	      mv -f /root/nginx1.spec /root/rpmbuild/SPECS/nginx.spec
              rpmbuild -bb /root/rpmbuild/SPECS/nginx.spec
              yum localinstall -y /root/rpmbuild/RPMS/x86_64/nginx-1.14.1-1.el7_4.ngx.x86_64.rpm
              systemctl enable --now nginx
              mkdir /usr/share/nginx/html/repo
              cp /root/rpmbuild/RPMS/x86_64/nginx-1.14.1-1.el7_4.ngx.x86_64.rpm /usr/share/nginx/html/repo/
              wget http://www.percona.com/downloads/percona-release/redhat/0.1-6/percona-release-0.1-6.noarch.rpm -O /usr/share/nginx/html/repo/percona-release-0.1-6.noarch.rpm
              createrepo /usr/share/nginx/html/repo/
              sed  -i '/index.*index\.html.*index\.htm;/a autoindex on\;' /etc/nginx/conf.d/default.conf
              nginx -t
              nginx -s reload
cat >> /etc/yum.repos.d/otus.repo << EOF
[otus]
name=otus-linux
baseurl=http://localhost/repo
gpgcheck=0
enabled=1
EOF
              yum install -y lynx

          SHELL
  
        end
    end
  end
  
